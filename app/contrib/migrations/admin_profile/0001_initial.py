# Generated by Django 3.0.10 on 2020-11-06 08:11

import app.core.db.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('event', '0001_initial'),
        ('master_data', '0001_initial'),
        ('manuscript', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ConfigPush',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(blank=True, max_length=300)),
                ('body', models.TextField(blank=True)),
                ('date', models.DateField(null=True)),
                ('time', models.TimeField(null=True)),
                ('graduation_year', models.CharField(max_length=200)),
                ('sex', models.CharField(max_length=100)),
                ('literary_class', models.CharField(max_length=100)),
                ('living_area', models.TextField(blank=True)),
                ('extracurricular', models.CharField(max_length=300)),
                ('event_day', models.CharField(max_length=200)),
                ('event_reservation_status', models.CharField(max_length=200)),
                ('event_attendance_status', models.CharField(max_length=200)),
                ('department', models.TextField(blank=True)),
                ('school_division', models.TextField(blank=True)),
                ('status', app.core.db.fields.TinyIntegerField(null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.Event')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EventCompany',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_join', models.DateTimeField(blank=True, null=True)),
                ('store_code', models.IntegerField(null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('company_join_status', models.IntegerField(default=1)),
                ('number_join_status', models.IntegerField(default=0)),
                ('plan_date', models.IntegerField(null=True)),
                ('company_name', models.CharField(max_length=50)),
                ('phonetic', models.CharField(max_length=50)),
                ('catch_copy', models.TextField(blank=True)),
                ('job_category', models.TextField(blank=True)),
                ('contact', models.TextField(blank=True)),
                ('job_information', models.CharField(max_length=50)),
                ('industry_information', models.CharField(max_length=50)),
                ('literature', models.CharField(max_length=50)),
                ('edu_background', models.CharField(max_length=100)),
                ('empl_location', models.CharField(max_length=50)),
                ('school_completion_status', models.CharField(max_length=50)),
                ('participation_schedule', models.CharField(max_length=50)),
                ('booth_signboard', models.CharField(max_length=50)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.Company')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='event.Event')),
            ],
        ),
        migrations.CreateModel(
            name='MailMagazine',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('sender_id', models.IntegerField(null=True)),
                ('type', models.CharField(default=0, max_length=20)),
                ('subject', models.CharField(max_length=1000)),
                ('body', models.TextField(blank=True)),
                ('sent_date', models.DateField(blank=True, null=True)),
                ('status', models.CharField(max_length=10)),
                ('division', models.CharField(max_length=20)),
                ('reserve_date', models.DateField(blank=True, null=True)),
                ('test_mail1', models.CharField(max_length=255)),
                ('test_mail2', models.CharField(max_length=255)),
                ('test_mail3', models.CharField(max_length=255)),
                ('test_mail4', models.CharField(max_length=255)),
                ('filter_event', models.CharField(max_length=100)),
                ('filter_bunri', models.CharField(max_length=45)),
                ('filter_department_division', models.CharField(max_length=100)),
                ('filter_school', models.CharField(max_length=45)),
                ('filter_prefecture', models.CharField(max_length=45)),
                ('filter_sex', models.CharField(max_length=45)),
                ('filter_club_activities', models.CharField(max_length=45)),
                ('receivers', models.IntegerField(null=True)),
                ('campaign_id', models.CharField(max_length=255)),
                ('segment_id', models.CharField(max_length=255)),
                ('mail_open_rate', models.FloatField(null=True)),
                ('messages_delivered', models.IntegerField(null=True)),
                ('messages_opened', models.IntegerField(null=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.Company')),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='manuscript.Manuscript')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialFeature',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('year', models.IntegerField(null=True)),
                ('type', app.core.db.fields.TinyIntegerField(null=True)),
                ('for_event_flg', models.IntegerField(default=0)),
                ('image', models.CharField(max_length=500)),
                ('title', models.CharField(max_length=300)),
                ('outline', models.CharField(max_length=500)),
                ('publication_start_date', models.DateField(blank=True, null=True)),
                ('publication_end_date', models.DateField(blank=True, null=True)),
                ('number_listed_company', models.IntegerField(null=True)),
                ('status', app.core.db.fields.TinyIntegerField(default=0)),
                ('pv_count', models.IntegerField(null=True)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SpecialFeatureAppealPoint',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('point_1', models.CharField(max_length=60)),
                ('point_2', models.CharField(max_length=60)),
                ('point_3', models.CharField(max_length=60)),
                ('type', models.IntegerField(default=0)),
                ('year', models.IntegerField(null=True)),
                ('manuscript', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manuscript.Manuscript')),
                ('special_feature', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='admin_profile.SpecialFeature')),
            ],
        ),
        migrations.CreateModel(
            name='MailMagazineReceiver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=300)),
                ('mail_magazine', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='admin_profile.MailMagazine')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.Student')),
            ],
        ),
        migrations.CreateModel(
            name='EventDataFree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
                ('memo', models.TextField(blank=True)),
                ('event_company_profile', models.IntegerField(null=True)),
                ('corporate_intelligence', models.CharField(max_length=100)),
                ('business_content', models.CharField(max_length=100)),
                ('event_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='admin_profile.EventCompany')),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_join', models.DateTimeField(blank=True, null=True)),
                ('status', models.IntegerField(null=True)),
                ('event_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='admin_profile.EventCompany')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='users.Student')),
            ],
        ),
        migrations.CreateModel(
            name='EventCompanyField',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('field_name', models.CharField(max_length=45)),
                ('field_value', models.IntegerField()),
                ('event_company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_profile.EventCompany')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('login', models.TextField(blank=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='user', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ConfigPushWorkPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_push', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_profile.ConfigPush')),
                ('work_place_master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='master_data.WorkPlaceMaster')),
            ],
        ),
        migrations.CreateModel(
            name='ConfigPushJobType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('config_push', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_profile.ConfigPush')),
                ('job_type_master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='master_data.JobTypeMaster')),
            ],
        ),
        migrations.CreateModel(
            name='ConfigPushCompanyType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('company_type_master', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='master_data.CompanyTypeMaster')),
                ('config_push', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='admin_profile.ConfigPush')),
            ],
        ),
    ]
